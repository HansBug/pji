image: local-registry.inner.buaaoo.top/image-dev/python:3.5.2

stages:
  - demo
  - unit_test
  - source_install
  - package
  - package_install
  - deploy

variables:
  MIN_UNITTEST_COVERAGE: 90
  TWINE_REPOSITORY: pypi
  OSS_NAME: oss
  OSS_RELEASE_ROOT: ${OSS_NAME}/releases/${CI_PROJECT_NAME}
  OSS_DEV_ROOT: ${OSS_NAME}/dev/${CI_PROJECT_NAME}
  DEMO_ROOT: demo
  SIMPLE_DEMO_PATH: ${DEMO_ROOT}/demo_program
  REAL_DEMO_PATH: ${DEMO_ROOT}/test_real_program

before_script:
  - pip config set global.index-url "https://${PYPI_USERNAME}:${PYPI_PASSWORD}@${PYPI_HOST}/simple"
  - pip3 install 'pypirc-chappers>=1' 'twine>=1'
  - pypirc -q -s "${TWINE_REPOSITORY}" -r "${PYPI_URL}" -u "${PYPI_USERNAME}" -p "${PYPI_PASSWORD}"
  - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  - if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
  - curl -o /usr/bin/mc "${RELEASE_URL}/mc" && chmod +x /usr/bin/mc
  - mc --version
  - mc config host add ${OSS_NAME} "${OSS_URL}" "${OSS_ACCESS_ID}" "${OSS_ACCESS_TOKEN}"
  - mkdir -p ${DEMO_ROOT} && tree -a ${DEMO_ROOT}

demo_development:
  stage: demo
  script:
    - pip3 install -e .
    - pji_dir=$(pip3 show pji | grep Location | cut -c 11-)/pji
      && tree -a ${pji_dir}
    - cd ${DEMO_ROOT}
    - cd ..

demo_production:
  stage: demo
  script:
    - pip3 install .
    - pji_dir=$(pip3 show pji | grep Location | cut -c 11-)/pji
      && tree -a ${pji_dir}
    - cd ${DEMO_ROOT}
    - cd ..
