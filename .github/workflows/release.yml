name: Package Release

on:
  release:
    types: [ published ]

jobs:
  release_pypi:
    name: Publish to official pypi
    runs-on: ${{ matrix.os }}
    if: ${{ github.repository == 'hansbug/pji' }}
    strategy:
      matrix:
        os:
          - 'ubuntu-18.04'
        python-version:
          - '3.8'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up python dependences
        run: |
          pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install --upgrade build
      - name: Build packages
        run: |
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution ðŸ“¦ to real PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  release_github:
    name: Release Standalone CLI
    runs-on: 'ubuntu-18.04'
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    container:
      image: python:${{ matrix.python-version }}-${{ matrix.os }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'buster'
        python-version:
          - '3.8'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Show Python Version
        run: |
          python -V
      - name: Set up system dependences on linux
        if: ${{ matrix.os != 'alpine' }}
        run: |
          apt-get update
          apt-get install -y tree cloc wget curl make graphviz
          apt-get install -y libxml2-dev libxslt-dev python-dev  # need by pypy3
          dot -V
      - name: Set up system dependences on alpine
        if: ${{ matrix.os == 'alpine' }}
        run: |
          apk update
          apk add tree cloc wget curl make graphviz
          apk add libxml2-dev libxslt-dev
          dot -V
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install -r requirements-build.txt
      - name: Test the basic environment
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Run unittest
        env:
          CI: 'true'
          LINETRACE: 1
        run: |
          make build
          ls -al dist
          dist/pji -v
          dist/pji -h
      - name: Get package version
        run: |
          make build
          python -c 'from pji.config.meta import __VERSION__;print(__VERSION__)'
          echo "PACKAGE_VERSION=$(python -c 'from pji.config.meta import __VERSION__;print(__VERSION__)')" >> $GITHUB_ENV
          echo "GIT_COMMIT_ID=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "CPU_ARCH=$(uname -m)" >> $GITHUB_ENV
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/pji
          asset_name: pji-v${{ env.PACKAGE_VERSION }}-linux-${{ env.CPU_ARCH }}-standalone
          tag: ${{ github.ref }}
          overwrite: true
